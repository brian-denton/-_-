name: CI/CD Pipeline

# Trigger the workflow on push to main branch and pull requests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Set environment variables
env:
  NODE_VERSION: "18"

jobs:
  # Job for linting and type checking
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Setup Biome CLI
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run Biome linting and formatting checks
      - name: Run Biome lint
        run: biome ci

      # Run TypeScript type checking
      - name: Type check
        run: npx tsc --noEmit

  # Job for building the application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build the Next.js application
      - name: Build application
        run: npm run build
        env:
          # Add any environment variables needed for build
          NODE_ENV: production

      # Upload build artifacts (optional - useful for deployment)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            public/
          retention-days: 1

  # Job for database checks (optional)
  database-check:
    name: Database Schema Check
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Generate database schema to ensure it's valid
      - name: Generate database schema
        run: npm run db:generate
